#!/usr/bin/env python

import os
import subprocess

# Set up environment
variables = Variables()
variables.Add(BoolVariable('testing', "Set to build the unit tests", False))
env = Environment(
    TOOLS=['default', 'go'],
    GOLOCALHELPER='build/scons-go-helper',
    variables=variables,
)
env['GOSTRIPTESTS'] = not env['testing']
if env['testing']:
    var_dir = 'build/tests'
else:
    var_dir = 'build'
env.Append(GOLIBPATH=[var_dir])
env.VariantDir(var_dir, 'src')

# Version info
def get_bzr_path():
    for path in os.environ['PATH'].split(os.path.pathsep):
        path = os.path.join(path, 'bzr')
        if os.path.exists(path):
            return path
    return None

def generate_buildversion(env, target, source):
    template = """\
// This file is automatically generated.
// DO NOT EDIT.
package buildversion

const Source = "bzr"
const RevNo = "{revno}"
const RevID = "{revision_id}"
const BranchNickname = "{branch_nick}"
const CleanWC = {clean}
"""
    bzr_path = get_bzr_path()
    f = open(str(target[0]), 'w')
    try:
        if bzr_path:
            subprocess.call([bzr_path, 'version-info', '--custom', '--template', template], stdout=f)
        else:
            template = template.replace('{revno}', 'archive')
            template = template.replace('{revision_id}', 'archive')
            template = template.replace('{branch_nick}', 'archive')
            template = template.replace('{clean}', '1')
            template = template.replace('bzr', 'archive')
            f.write(template)
    finally:
        f.close()

version_file = File('build/buildversion.go')
Command(version_file, [], generate_buildversion)
AlwaysBuild(version_file)

env.Go(version_file)

# Main build
lib = SConscript('src/goray/SConscript', exports='env', variant_dir=var_dir + '/goray')
yaml = SConscript('src/yaml/SConscript', exports='env', variant_dir=var_dir + '/yaml')
program = env.GoProgram('bin/goray', 'build/main.go')

Alias('lib', lib)
Alias('yaml', yaml)

if env['testing']:
    test_suite = env.GoProgram('bin/runtests', env.GoTest('build/tests/tests.go', [lib, yaml]))
    Default(test_suite)
else:
    Default(lib, program)
